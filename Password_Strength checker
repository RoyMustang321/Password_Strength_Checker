import re

def password_strength_checker(password):
    score = 0
    length = len(password)

    # Feedback list to inform user about weaknesses
    feedback = []

    # Check the length of the password
    if length >= 8:
        score += 1  # Bonus for length
    else:
        feedback.append("Password should be at least 8 characters long.")

    # Check for lowercase letters
    if re.search("[a-z]", password):
        score += 1
    else:
        feedback.append("Add lowercase letters.")

    # Check for uppercase letters
    if re.search("[A-Z]", password):
        score += 1
    else:
        feedback.append("Add uppercase letters.")

    # Check for digits
    if re.search("[0-9]", password):
        score += 1
    else:
        feedback.append("Add digits (0-9).")

    # Check for special characters
    if re.search("[@#$%^&*()_+!]", password):
        score += 1
    else:
        feedback.append("Add special characters (e.g., @, #, $, etc.).")

    # Check for repetition or common patterns
    if re.search(r'(.)\1{2,}', password):
        feedback.append("Avoid repeated characters (e.g., 'aaa' or '111').")
    
    if re.search(r'(123|abc|password|qwerty)', password, re.IGNORECASE):
        feedback.append("Avoid common sequences (e.g., '123', 'abc', or 'password').")

    # Provide a final rating
    if score <= 2:
        rating = "Weak"
    elif score == 3:
        rating = "Moderate"
    elif score == 4:
        rating = "Strong"
    else:
        rating = "Very Strong"

    return {
        "password": password,
        "rating": rating,
        "feedback": feedback
    }

# Example usage
password = input("Enter a password: ")
result = password_strength_checker(password)
print(f"Password Rating: {result['rating']}")
if result['feedback']:
    print("Suggestions for improvement:")
    for tip in result['feedback']:
        print(f" - {tip}")
